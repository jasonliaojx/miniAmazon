{"ast":null,"code":"var _jsxFileName = \"/Users/shichen/Desktop/mini_amazon_fs/frontend/src/screens/ProductsScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts, saveProduct } from '../actions/productActions';\n\nfunction ProductsScreen(props) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [name, setName] = useState('');\n  const [id, setId] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    products,\n    error\n  } = productList;\n  const productSave = useSelector(state => state.productSave);\n  const productDelete = useSelector(state => state.productDelete);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = productSave;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n\n    dispatch(listProducts());\n    return () => {//;\n    };\n  }, [successSave]);\n\n  const openModal = product => {\n    setModalVisible(true);\n    setId(product._id);\n    setName(product.name);\n    setPrice(product.price);\n    setCountInStock(product.countInStock);\n    setCategory(product.category);\n    setImage(product.image);\n    setBrand(product.brand);\n    setDescription(product.description);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveProduct({\n      _id: id,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content content-margined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button primary\",\n    onClick: () => openModal({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Create Product\")), modalVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Create Product\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, loadingSave && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, \"Loading...\"), errorSave && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 35\n    }\n  }, errorSave)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: price,\n    id: \"price\",\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: image,\n    id: \"image\",\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), uploading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 35\n    }\n  }, \"Uploading...\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Brand\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"brand\",\n    value: brand,\n    id: \"brand\",\n    onChange: e => setBrand(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"CountInStock\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    value: countInStock,\n    id: \"countInStock\",\n    onChange: e => setCountInStock(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"category\",\n    value: category,\n    id: \"category\",\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    value: description,\n    id: \"description\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, id ? 'Update' : 'Create')), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setModalVisible(false),\n    className: \"button secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Back\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, \"Brand\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, product._id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, product.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, product.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, product.category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, product.brand), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: () => openModal(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, \"Edit\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: () => deleteHandler(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 23\n    }\n  }, \"Delete\"))))))));\n}\n\nexport default ProductsScreen;","map":{"version":3,"sources":["/Users/shichen/Desktop/mini_amazon_fs/frontend/src/screens/ProductsScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","listProducts","saveProduct","ProductsScreen","props","modalVisible","setModalVisible","name","setName","id","setId","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","productList","state","loading","products","error","productSave","productDelete","loadingSave","success","successSave","errorSave","dispatch","openModal","product","_id","submitHandler","e","preventDefault","target","value","uploadFileHandler","uploading","map","deleteHandler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { listProducts, saveProduct } from '../actions/productActions';\n\nfunction ProductsScreen(props) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [name, setName] = useState('');\n    const [id, setId] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [description, setDescription] = useState('');\n    const productList = useSelector(state => state.productList);\n    const {loading, products, error} = productList;\n    const productSave = useSelector(state => state.productSave);\n    const productDelete = useSelector(state => state.productDelete);\n    const {loading: loadingSave, success: successSave, error: errorSave } = productSave;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (successSave) {\n            setModalVisible(false);\n        }\n       dispatch(listProducts());\n        return () => {\n            //;\n        };\n    }, [successSave]);\n\n    const openModal = (product) => {\n        setModalVisible(true);\n        setId(product._id);\n        setName(product.name);\n        setPrice(product.price);\n        setCountInStock(product.countInStock);\n        setCategory(product.category);\n        setImage(product.image);\n        setBrand(product.brand);\n        setDescription(product.description);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveProduct({\n            _id: id,\n            name, price, image, brand, \n            category, countInStock, description}));\n    }\n\n\n    return (\n        <div className=\"content content-margined\">\n          <div className=\"product-header\">\n            <h3>Products</h3>\n            <button className=\"button primary\" onClick={() => openModal({})}>\n              Create Product\n            </button>\n          </div>\n          {modalVisible && (\n            <div className=\"form\">\n              <form onSubmit={submitHandler}>\n                <ul className=\"form-container\">\n                  <li>\n                    <h2>Create Product</h2>\n                  </li>\n                  <li>\n                    {loadingSave && <div>Loading...</div>}\n                    {errorSave && <div>{errorSave}</div>}\n                  </li>\n    \n                  <li>\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={name}\n                      id=\"name\"\n                      onChange={(e) => setName(e.target.value)}\n                    ></input>\n                  </li>\n                  <li>\n                    <label htmlFor=\"price\">Price</label>\n                    <input\n                      type=\"text\"\n                      name=\"price\"\n                      value={price}\n                      id=\"price\"\n                      onChange={(e) => setPrice(e.target.value)}\n                    ></input>\n                  </li>\n                  <li>\n                    <label htmlFor=\"image\">Image</label>\n                    <input\n                      type=\"text\"\n                      name=\"image\"\n                      value={image}\n                      id=\"image\"\n                      onChange={(e) => setImage(e.target.value)}\n                    ></input>\n                    <input type=\"file\" onChange={uploadFileHandler}></input>\n                    {uploading && <div>Uploading...</div>}\n                  </li>\n                  <li>\n                    <label htmlFor=\"brand\">Brand</label>\n                    <input\n                      type=\"text\"\n                      name=\"brand\"\n                      value={brand}\n                      id=\"brand\"\n                      onChange={(e) => setBrand(e.target.value)}\n                    ></input>\n                  </li>\n                  <li>\n                    <label htmlFor=\"countInStock\">CountInStock</label>\n                    <input\n                      type=\"text\"\n                      name=\"countInStock\"\n                      value={countInStock}\n                      id=\"countInStock\"\n                      onChange={(e) => setCountInStock(e.target.value)}\n                    ></input>\n                  </li>\n                  <li>\n                    <label htmlFor=\"name\">Category</label>\n                    <input\n                      type=\"text\"\n                      name=\"category\"\n                      value={category}\n                      id=\"category\"\n                      onChange={(e) => setCategory(e.target.value)}\n                    ></input>\n                  </li>\n                  <li>\n                    <label htmlFor=\"description\">Description</label>\n                    <textarea\n                      name=\"description\"\n                      value={description}\n                      id=\"description\"\n                      onChange={(e) => setDescription(e.target.value)}\n                    ></textarea>\n                  </li>\n                  <li>\n                    <button type=\"submit\" className=\"button primary\">\n                      {id ? 'Update' : 'Create'}\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      type=\"button\"\n                      onClick={() => setModalVisible(false)}\n                      className=\"button secondary\">\n                      Back\n                    </button>\n                  </li>\n                </ul>\n              </form>\n            </div>\n          )}\n    \n          <div className=\"product-list\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Price</th>\n                  <th>Category</th>\n                  <th>Brand</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {products.map((product) => (\n                  <tr key={product._id}>\n                    <td>{product._id}</td>\n                    <td>{product.name}</td>\n                    <td>{product.price}</td>\n                    <td>{product.category}</td>\n                    <td>{product.brand}</td>\n                    <td>\n                      <button className=\"button\" onClick={() => openModal(product)}>\n                        Edit\n                      </button>{' '}\n                      <button\n                        className=\"button\"\n                        onClick={() => deleteHandler(product)}>\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n    }\n\nexport default ProductsScreen;"]},"metadata":{},"sourceType":"module"}
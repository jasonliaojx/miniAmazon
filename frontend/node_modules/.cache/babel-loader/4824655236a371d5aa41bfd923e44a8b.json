{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from \"../constants/productConstants\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (product._id) {\n      const {\n        data\n      } = await axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        paylad: data\n      });\n    } else {\n      const {\n        data\n      } = await axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        paylad: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["/Users/shichen/Desktop/mini_amazon_fs/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","paylad","put","detailsProduct","productId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL} from \"../constants/productConstants\";\n\nconst listProducts = () => async (dispatch) => {\n\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST});\n        const {data} = await axios.get(\"/api/products\");\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n    }\n    catch(error) {\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message}); \n    }\n}\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\n        const {userSignin: {userInfo}} = getState();\n        if(product._id) {\n            const {data} = await axios.post('/api/products', product, {headers: {\n                'Authorization': 'Bearer' + userInfo.token\n        }}); \n        dispatch({type: PRODUCT_SAVE_SUCCESS, paylad: data});\n    }\n        else {\n            const {data} = await axios.put('/api/products/' + product._id, product, {headers: {\n                'Authorization': 'Bearer' + userInfo.token\n        }}); \n        dispatch({type: PRODUCT_SAVE_SUCCESS, paylad: data});\n        }\n    } catch (error) {\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message}); \n    }\n\n}\n\nconst detailsProduct = (productId) => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n        const {data} = await axios.get(\"/api/products/\" + productId);\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\n    }\n} \n\nexport {listProducts, detailsProduct, saveProduct};"]},"metadata":{},"sourceType":"module"}
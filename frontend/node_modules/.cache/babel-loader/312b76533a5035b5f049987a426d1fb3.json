{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product = async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('/api/products', product, {\n      headers: {\n        'Authorization': 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      paylad: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["/Users/shichen/Desktop/mini_amazon_fs/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","PRODUCT_SAVE_REQUEST","userSignin","userInfo","post","headers","token","PRODUCT_SAVE_SUCCESS","paylad","PRODUCT_SAVE_FAIL","detailsProduct","productId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,iBAArD,EAAwEC,uBAAxE,EAAiGC,uBAAjG,EAA0HC,oBAA1H,QAAqJ,+BAArJ;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAE3C,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACA,UAAM;AAACS,MAAAA;AAAD,QAAS,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,oBAAP;AAA6BU,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACH,GAJD,CAKA,OAAMG,KAAN,EAAa;AACTL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,iBAAP;AAA0BS,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AACJ,CAVD;;AAYA,MAAMC,WAAW,GAAIC,OAAD,GAAY,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC1D,MAAI;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAES,oBAAP;AAA6BN,MAAAA,OAAO,EAAEI;AAAtC,KAAD,CAAR;AACA,UAAM;AAACG,MAAAA,UAAU,EAAE;AAACC,QAAAA;AAAD;AAAb,QAA2BH,QAAQ,EAAzC;AACA,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMV,KAAK,CAACqB,IAAN,CAAW,eAAX,EAA4BL,OAA5B,EAAqC;AAACM,MAAAA,OAAO,EAAE;AAChE,yBAAiB,WAAWF,QAAQ,CAACG;AAD2B;AAAV,KAArC,CAArB;AAGAf,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEe,oBAAP;AAA6BC,MAAAA,MAAM,EAAEf;AAArC,KAAD,CAAR;AACH,GAPD,CAOE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEiB,iBAAP;AAA0Bd,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AAEJ,CAZD;;AAcA,MAAMa,cAAc,GAAIC,SAAD,IAAe,MAAOpB,QAAP,IAAoB;AACtD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,uBAAP;AAAgCQ,MAAAA,OAAO,EAAEgB;AAAzC,KAAD,CAAR;AACA,UAAM;AAAClB,MAAAA;AAAD,QAAS,MAAMV,KAAK,CAACW,GAAN,CAAU,mBAAmBiB,SAA7B,CAArB;AACApB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,uBAAP;AAAgCO,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAJD,CAIE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEH,oBAAP;AAA6BM,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AACH;AACJ,CARD;;AAUA,SAAQP,YAAR,EAAsBoB,cAAtB,EAAsCZ,WAAtC","sourcesContent":["import axios from \"axios\";\n\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL} from \"../constants/productConstants\";\n\nconst listProducts = () => async (dispatch) => {\n\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST});\n        const {data} = await axios.get(\"/api/products\");\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n    }\n    catch(error) {\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message}); \n    }\n}\n\nconst saveProduct = (product) = async (dispatch, getState) => {\n    try {\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\n        const {userSignin: {userInfo}} = getState();\n        const {data} = await axios.post('/api/products', product, {headers: {\n            'Authorization': 'Bearer' + userInfo.token\n        }});\n        dispatch({type: PRODUCT_SAVE_SUCCESS, paylad: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message}); \n    }\n\n}\n\nconst detailsProduct = (productId) => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n        const {data} = await axios.get(\"/api/products/\" + productId);\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\n    }\n} \n\nexport {listProducts, detailsProduct, saveProduct};"]},"metadata":{},"sourceType":"module"}
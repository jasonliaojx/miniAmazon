{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\n\nfunction cartReducer(state = {\n  cartItems: []\n}, action) {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.product === item.product);\n\n      if (product) {\n        return {\n          cartItems: state.cartItems.map(x => x.product === product.product ? product : x)\n        };\n      }\n\n      return {\n        cartItems: [...state.cartItems, item]\n      };\n\n    case CART_REMOVE_ITEM:\n      return {\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { cartReducer };","map":{"version":3,"sources":["/Users/shichen/Desktop/mini_amazon_fs/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","product","find","x","map","filter"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,QAA8C,4BAA9C;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAA7B,EAA8CC,MAA9C,EAAsD;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,OAAO,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACF,OAAF,KAAcF,IAAI,CAACE,OAA7C,CAAhB;;AACA,UAAIA,OAAJ,EAAa;AACT,eAAO;AAACL,UAAAA,SAAS,EACbD,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAoBD,CAAC,IAAIA,CAAC,CAACF,OAAF,KAAcA,OAAO,CAACA,OAAtB,GAA+BA,OAA/B,GAAyCE,CAAlE;AADG,SAAP;AAEH;;AACD,aAAO;AAACP,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAZ,OAAP;;AACJ,SAAKN,gBAAL;AACI,aAAO;AAACG,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,MAAhB,CAAuBF,CAAC,IAAIA,CAAC,CAACF,OAAF,KAAcJ,MAAM,CAACG,OAAjD;AAAZ,OAAP;;AACJ;AACI,aAAOL,KAAP;AAZR;AAcH;;AAED,SAAQD,WAAR","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM} from '../constants/cartConstants';\n\nfunction cartReducer(state = {cartItems: []}, action) {\n    switch(action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n            const product = state.cartItems.find(x => x.product === item.product);\n            if (product) {\n                return {cartItems: \n                    state.cartItems.map(x => x.product === product.product? product : x)}\n            }\n            return {cartItems: [...state.cartItems, item]};\n        case CART_REMOVE_ITEM:\n            return {cartItems: state.cartItems.filter(x => x.product !== action.payload)};\n        default:\n            return state;\n    }\n}\n\nexport {cartReducer}"]},"metadata":{},"sourceType":"module"}
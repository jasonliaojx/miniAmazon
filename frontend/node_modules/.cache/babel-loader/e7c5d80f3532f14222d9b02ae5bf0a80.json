{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_REQUEST } from \"../constants/productConstants\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        paylad: data\n      });\n    } else {\n      const {\n        data\n      } = await axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        paylad: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/products/\" + productId, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };","map":{"version":3,"sources":["/Users/shichen/Desktop/mini_amazon_fs/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_REQUEST","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","paylad","put","detailsProduct","productId","deleteProduct","delete","Authorization","PRODUCT_DELETE_SUCCESS","success","PRODUCT_DELETE_FAIL"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_REQUEST} from \"../constants/productConstants\";\n\nconst listProducts = () => async (dispatch) => {\n\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST});\n        const {data} = await axios.get(\"/api/products\");\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n    }\n    catch(error) {\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message}); \n    }\n}\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\n        const {userSignin: {userInfo}} = getState();\n        if(!product._id) {\n            const {data} = await axios.post('/api/products', product, {headers: {\n                'Authorization': 'Bearer' + userInfo.token\n        }}); \n        dispatch({type: PRODUCT_SAVE_SUCCESS, paylad: data});\n    }\n        else {\n            const {data} = await axios.put('/api/products/' + product._id, product, {headers: {\n                'Authorization': 'Bearer' + userInfo.token\n        }}); \n        dispatch({type: PRODUCT_SAVE_SUCCESS, paylad: data});\n        }\n    } catch (error) {\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message}); \n    }\n\n}\n\nconst detailsProduct = (productId) => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n        const {data} = await axios.get(\"/api/products/\" + productId);\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\n    }\n} \n\nconst deleteProduct = (productId) => async (dispatch, getState) => {\n    try{\n\n        const {userSignin: {userInfo}} = getState();\n        dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\n        const {data} = await axios.delete(\"/api/products/\" + productId, {headers: {\n            Authorization: 'Bearer' + userInfo.token\n        }});\n        dispatch({type: PRODUCT_DELETE_SUCCESS, payload: data, success: true});\n    } catch (error) {\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: error.message});\n    }\n} \n\nexport {listProducts, detailsProduct, saveProduct, deleteProduct};"]},"metadata":{},"sourceType":"module"}